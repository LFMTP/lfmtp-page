PVS is a specification language, a theorem prover and a type checker based on simple types extended with predicate sub-typing. The present work proposes to encode predicate sub-typing as used by PVS into the Lambda Pi calculus modulo rewriting, an extension of lambda calculus with dependent types and rewriting rules. The work is based on the formalisation of predicate sub-typing by F. Gilbert known as the system PVS-Cert. A basic encoding of PVS-Cert is tested on a small specification of rational numbers. This encoding is enriched with sub-type polymorphism, a central feature in systems with sub-typing.

