The Everest project uses the F* language to verify low-level systems code.  Such code includes verified cryptography implementations, verified protocol code, and verified serialization and parsing code.  This talk will discuss how F*'s features for tactics, normalization, and SMT solving can be combined to make verification easier and faster.  Examples will include arithmetic used for cryptography (tactics + SMT), converting between bytes and words (normalization + SMT), meta-programming parsers and serializers (tactics + SMT), and custom verification condition generation for assembly language code (normalization + SMT).