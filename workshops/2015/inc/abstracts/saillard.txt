The λΠ-calculus Modulo is a variant of the λ-calculus with dependent types where β-conversion is
extended with user-defined rewrite rules. It is an expressive logical framework and has been used
to encode logics and type systems in a shallow way. Basic properties such as subject reduction or
uniqueness of types do not hold in general in the λΠ-calculus Modulo. However, they hold if the
rewrite system generated by the rewrite rules together with β-reduction is confluent. But this is
too restrictive. To handle the case where non confluence comes from the interference between the
β-reduction and rewrite rules with λ-abstraction on their left-hand side, we introduce a notion of
rewriting modulo β for the λΠ-calculus Modulo. We prove that confluence of rewriting modulo β
is enough to ensure subject reduction and uniqueness of types. We achieve our goal by encoding the
λΠ-calculus Modulo into Higher-Order Rewrite System (HRS). As a consequence, we also make
available in the λΠ-calculus Modulo the confluence and termination criteria known for HRSs.